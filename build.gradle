buildscript {    // Configuration for building
  repositories {
    jcenter()    // Bintray's repository - a fast Maven Central mirror & more
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.1.0'    // Latest 1.x.x release
  }
}

plugins {
    id "org.springframework.boot" version "2.2.0.RELEASE"
    id 'java'
    id "ajk.gradle.elastic" version "0.0.20"
    id "org.sonarqube" version "2.8"
    id 'jacoco'
    id "name.remal.sonarlint" version "1.0.157"
    
}
apply plugin: 'com.google.cloud.tools.appengine'

repositories {
    mavenCentral()
    maven {
    url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
  }
}

jacocoTestReport {
    reports {
        xml.enabled true
        
    }
}

sonarqube {
    properties {
		property "sonar.host.url","https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
		property "sonar.login", "43983a01ea79d77e7ce4931e989733cdcfb6ef47"
		property "sonar.projectKey", "TDDTutorial"
		property "sonar.organization" , "steinko-github"
       
    }
}

appengine {

  deploy {   // deploy configuration
    stopPreviousVersion = true  // default - stop the current version
    promote = true              // default - & make this the current version
  }

}



test.finalizedBy jacocoTestReport
check.dependsOn sonarqube
check.dependsOn sonarlintMain
check.dependsOn sonarlintTest

dependencies {
    
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.0.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.0.RELEASE') 
    {
		    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	  } 
}



test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

task buildDockerImage(type: Exec) { 
    group 'docker'
    description 'build docker image'
    commandLine 'docker', 'build', '-t', 'steinko/junit5tutorial:1', '.'
   }

task runDockerImage(type: Exec) { 
    dependsOn buildDockerImage
    group 'docker'
    description 'run docker image'
    commandLine 'docker', 'run', '-p', '8080:8080','steinko/junitmockito:1'
   }


task createGCP(type:Exec) {
  dependsOn 'buildDockerImage'
	group 'Deployment'
	description 'create google cloud project'
	commandLine 'ansible-playbook', '../../Infrastructure/Deployment/CreateProject.yaml'
 }

 task deletGCP (type:Exec) {
   group 'Deployment'
	description 'create google cloud project'
	commandLine 'ansible-playbook', '../../Infrastructure/Deployment/DeleteProject.yaml'
}

task deleteService(type:Exec){ 
  group 'Deployment'
	description 'delete appengine service'
  commandLine 'gcloud','app', 'services', 'delete', 'default'

 }

task deployService(type: Exec) { 
  group 'Deployment'
	description 'deploy service on appengine'
  commandLine 'gcloud', 'app', 'deploy'

 }

